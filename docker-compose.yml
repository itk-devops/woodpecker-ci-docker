networks:
  frontend:
    external: true
  app:
    driver: bridge
    internal: false

include:
  - docker-compose.agent.yml

services:
  mariadb:
    image: itkdev/mariadb:latest
    networks:
      - app
    ports:
      - '3306'
    healthcheck:
      test: [ "CMD", "healthcheck.sh", "--connect", "--innodb_initialized" ]
      start_period: 10s
      interval: 10s
      timeout: 5s
      retries: 3
    environment:
      - MYSQL_ROOT_PASSWORD=password
      - MYSQL_USER=db
      - MYSQL_PASSWORD=db
      - MYSQL_DATABASE=db

  woodpecker:
    image: woodpeckerci/woodpecker-server:${COMPOSE_TAG}
    networks:
      - app
      - frontend
    depends_on:
      mariadb:
        condition: service_healthy
    ports:
      - "8000"
      - "8100"
      - "9000"
    volumes:
      - .docker/data/server:/var/lib/woodpecker/
    env_file:
      - path: .env
        required: true
      - path: .env.local
        required: false
    environment:
      - WOODPECKER_HOST=${WOODPECKER_HOST}
      - WOODPECKER_OPEN=true
      - WOODPECKER_ORGS=${WOODPECKER_ORGS}
      - WOODPECKER_ADMIN=${WOODPECKER_ADMIN}
      - WOODPECKER_GITHUB=true
      - WOODPECKER_GITHUB_CLIENT=${WOODPECKER_GITHUB_CLIENT}
      - WOODPECKER_GITHUB_SECRET=${WOODPECKER_GITHUB_SECRET}
      - WOODPECKER_AGENT_SECRET=${WOODPECKER_AGENT_SECRET}
      - WOODPECKER_DATABASE_DRIVER=mysql
      - WOODPECKER_DATABASE_DATASOURCE=${WOODPECKER_DATABASE_DATASOURCE}
      - WOODPECKER_DEFAULT_CANCEL_PREVIOUS_PIPELINE_EVENTS=${WOODPECKER_DEFAULT_CANCEL_PREVIOUS_PIPELINE_EVENTS}
      - WOODPECKER_PROMETHEUS_AUTH_TOKEN=${WOODPECKER_PROMETHEUS_AUTH_TOKEN}
      - WOODPECKER_METRICS_SERVER_ADDR=${WOODPECKER_METRICS_SERVER_ADDR}
    labels:
      - traefik.enable=true

      # web server
      - traefik.docker.network=frontend
      - traefik.http.routers.${COMPOSE_PROJECT_NAME}.rule=Host(`${COMPOSE_DOMAIN}`)
      - traefik.http.services.${COMPOSE_PROJECT_NAME}.loadbalancer.server.port=8000
  #     HTTPS config - uncomment to enable redirect from :80 to :443
      - traefik.http.routers.${COMPOSE_PROJECT_NAME}.middlewares=redirect-to-https
      - traefik.http.middlewares.redirect-to-https.redirectscheme.scheme=https

      # web server
      - traefik.docker.network=frontend
      - traefik.http.routers.${COMPOSE_PROJECT_NAME}.rule=Host(`grpc-${COMPOSE_DOMAIN}`)
      - traefik.http.services.${COMPOSE_PROJECT_NAME}.loadbalancer.server.port=9000
  #     HTTPS config - uncomment to enable redirect from :80 to :443
      - traefik.http.routers.${COMPOSE_PROJECT_NAME}-grpc.middlewares=redirect-to-https
      - traefik.http.middlewares.redirect-to-https.redirectscheme.scheme=https
