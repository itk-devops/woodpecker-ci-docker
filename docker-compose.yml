networks:
  frontend:
    external: true
  app:
    driver: bridge
    internal: false

services:
  ubuntu:
    build:
      context: .docker/dockerfiles/ubuntu/
    networks:
      - app
    ports:
      - '22'
    volumes:
      - .:/app

  woodpecker:
    image: woodpeckerci/woodpecker-server:latest
    networks:
      - app
      - frontend
    ports:
      - "8000"
      - "9000"
    volumes:
      - .docker/data/server:/var/lib/woodpecker/
    env_file:
      - path: .env
        required: true
      - path: .env.local
        required: false
    environment:
      - WOODPECKER_HOST=${WOODPECKER_HOST}
      - WOODPECKER_OPEN=true
      - WOODPECKER_ORGS=${WOODPECKER_ORGS}
      - WOODPECKER_ADMIN=${WOODPECKER_ADMIN}
      - WOODPECKER_GITHUB=true
      - WOODPECKER_GITHUB_CLIENT=${WOODPECKER_GITHUB_CLIENT}
      - WOODPECKER_GITHUB_SECRET=${WOODPECKER_GITHUB_SECRET}
      - WOODPECKER_AGENT_SECRET=${WOODPECKER_AGENT_SECRET}
    labels:
      - traefik.enable=true
      - traefik.docker.network=frontend
      - traefik.http.routers.${COMPOSE_PROJECT_NAME}.rule=Host(`${COMPOSE_DOMAIN}`)
      - traefik.http.services.${COMPOSE_PROJECT_NAME}.loadbalancer.server.port=8000
  #      HTTPS config - uncomment to enable redirect from :80 to :443
      - traefik.http.routers.${COMPOSE_PROJECT_NAME}.middlewares=redirect-to-https
      - traefik.http.middlewares.redirect-to-https.redirectscheme.scheme=https

  woodpecker-agent:
    image: woodpeckerci/woodpecker-agent:latest
    deploy:
      mode: replicated
      replicas: 4
    networks:
      - app
    command: agent
    depends_on:
      - woodpecker
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    env_file:
      - path: .env
        required: true
      - path: .env.local
        required: false
    environment:
      - WOODPECKER_SERVER=woodpecker:9000
      - WOODPECKER_AGENT_SECRET=${WOODPECKER_AGENT_SECRET}
