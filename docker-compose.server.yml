networks:
  frontend:
    external: true
  app:
    driver: bridge
    internal: false

services:
  woodpecker:
    image: woodpeckerci/woodpecker-server:latest
    networks:
      - app
      - frontend
    ports:
      - 8000
    volumes:
      - .docker/data/server:/var/lib/woodpecker/
    environment:
      - WOODPECKER_HOST=${WOODPECKER_HOST}
      - WOODPECKER_OPEN=true
      - WOODPECKER_ORGS=${WOODPECKER_ORGS}
      - WOODPECKER_ADMIN=${WOODPECKER_ADMIN}
      - WOODPECKER_GITHUB=true
      - WOODPECKER_GITHUB_CLIENT=${WOODPECKER_GITHUB_CLIENT}
      - WOODPECKER_GITHUB_SECRET=${WOODPECKER_GITHUB_SECRET}
      - WOODPECKER_AGENT_SECRET=${WOODPECKER_AGENT_SECRET}
    labels:
      - traefik.enable=true
      - traefik.docker.network=frontend
      - traefik.http.services.${COMPOSE_PROJECT_NAME}-service.loadbalancer.server.port=8000
      - traefik.http.routers.${COMPOSE_PROJECT_NAME}-http.rule=Host(`${COMPOSE_SERVER_DOMAIN}`)
      - traefik.http.routers.${COMPOSE_PROJECT_NAME}-http.entrypoints=web
      - traefik.http.routers.${COMPOSE_PROJECT_NAME}-http.middlewares=redirect-to-https
      - traefik.http.middlewares.redirect-to-https.redirectscheme.scheme=https
      - traefik.http.routers.${COMPOSE_PROJECT_NAME}.rule=Host(`${COMPOSE_SERVER_DOMAIN}`)
      - traefik.http.routers.${COMPOSE_PROJECT_NAME}.entrypoints=websecure

  woodpecker-agent:
    image: woodpeckerci/woodpecker-agent:latest
    deploy:
      mode: replicated
      replicas: 4
    networks:
      - app
    command: agent
    restart: always
    depends_on:
      - woodpecker
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      - WOODPECKER_SERVER=woodpecker:9000
      - WOODPECKER_AGENT_SECRET=${WOODPECKER_AGENT_SECRET}
